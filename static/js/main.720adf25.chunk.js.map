{"version":3,"sources":["components/SingleTodo.js","actions/actions.js","actions/types.js","components/Loader.js","components/ActionContainer.js","App.js","Store/Reducer.js","index.js"],"names":["SingleTodo","props","dispatch","useDispatch","todo","className","style","backgroundColor","color","title","description","_id","onClick","setEditData","id","axios","delete","then","type","Loader","ActionContainer","todos","useSelector","state","useState","setTitle","desc","setDesc","setColor","editData","resetEditData","useEffect","setEditableData","data","resetForm","length","all","map","el","clearTodos","disabled","onSubmit","e","preventDefault","pushData","patch","res","post","addTodo","alert","placeholder","value","onChange","target","form","placement","App","showLoader","a","get","setEditDataHandler","window","scrollTo","top","behavior","reverse","initialState","Reducer","action","editId","findIndex","filtered","filter","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.720adf25.chunk.js","sourcesContent":["import '../App.scss';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteTodo } from '../actions/actions';\r\n\r\nexport const SingleTodo = (props) => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let { todo } = props\r\n\r\n    return (\r\n\r\n        <div className='todo_single_cont'>\r\n            <div style={{ backgroundColor: todo.color }} key={todo._id} className='todo_single'>\r\n                <div>{todo.title}</div>\r\n                <div>{todo.description}</div>\r\n            </div>\r\n            <div className=\"todo_single_buttons\">\r\n                <button onClick={() => props.setEditData(todo)}>Edit</button>\r\n                <button onClick={() => dispatch(deleteTodo(todo._id))}>Delete</button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","import { GET_TODOS, ADD_TODO, EDIT_TODO, DELETE_TODO, CLEAR_TODOS, HIDE_LOADER } from './types';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport const getTodos = () => {\r\n    return async dispatch => {\r\n        const todos = await axios.get(\"https://todo.eachbase.com/api/HaykHovsepyan/todos\")\r\n            .then(res =>\r\n                res.data\r\n            );\r\n        dispatch({\r\n            type: GET_TODOS,\r\n            todos: todos\r\n        })\r\n        dispatch({\r\n            type: HIDE_LOADER\r\n        })\r\n    };\r\n}\r\n\r\nexport const addTodo = (data) => {\r\n    return dispatch => {\r\n        axios.post('https://todo.eachbase.com/api/HaykHovsepyan/todos', data).then(res =>\r\n            dispatch({\r\n                type: ADD_TODO,\r\n                todo: res.data\r\n            })\r\n        );\r\n    }\r\n};\r\n\r\nexport const editTodo = (data, id) => {\r\n    return dispatch => {\r\n        axios.patch(`https://todo.eachbase.com/api/HaykHovsepyan/todos/${id}`, data).then(res =>\r\n            dispatch({\r\n                type: EDIT_TODO,\r\n                data: res.data\r\n            })  \r\n        );\r\n    }\r\n};\r\n\r\nexport const deleteTodo = (id) => {\r\n    return dispatch => {\r\n        axios.delete(`https://todo.eachbase.com/api/HaykHovsepyan/todos/${id}`)\r\n            .then(() =>\r\n                dispatch({\r\n                    type: DELETE_TODO,\r\n                    id: id\r\n                })\r\n            )\r\n    }\r\n};\r\n\r\n\r\nexport const clearTodos = (todos) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CLEAR_TODOS\r\n        })\r\n        if (todos && todos.length) {\r\n            axios.all(todos.map(el => axios.delete(`https://todo.eachbase.com/api/HaykHovsepyan/todos/${el._id}`)))\r\n        }\r\n    }\r\n};","export const GET_TODOS = 'GET_TODOS';\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const CLEAR_TODOS = 'CLEAR_TODOS';\r\nexport const HIDE_LOADER = 'HIDE_LOADER';","import './components.scss';\r\nimport React from 'react';\r\n\r\nexport const Loader = () => {\r\n\r\n    return (\r\n        <div className=\"loader\">\r\n                <div className=\"sk-cube-grid\">\r\n                    <div className=\"sk-cube sk-cube1\"></div>\r\n                    <div className=\"sk-cube sk-cube2\"></div>\r\n                    <div className=\"sk-cube sk-cube3\"></div>\r\n                    <div className=\"sk-cube sk-cube4\"></div>\r\n                    <div className=\"sk-cube sk-cube5\"></div>\r\n                    <div className=\"sk-cube sk-cube6\"></div>\r\n                    <div className=\"sk-cube sk-cube7\"></div>\r\n                    <div className=\"sk-cube sk-cube8\"></div>\r\n                    <div className=\"sk-cube sk-cube9\"></div>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import './components.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { addTodo, clearTodos, editTodo } from '../actions/actions'\r\nimport ColorPicker from 'rc-color-picker';\r\nimport 'rc-color-picker/assets/index.css';\r\n\r\n\r\nexport const ActionContainer = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const todos = useSelector(state => state.todos);\r\n    const [title, setTitle] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    const [color, setColor] = useState('#ff9146');\r\n\r\n    let { editData, resetEditData } = props;\r\n\r\n    useEffect(() => {\r\n        if (editData) {\r\n            setEditableData(editData)\r\n        }\r\n    }, [editData]);\r\n\r\n    const setEditableData = (data) => {\r\n        setTitle(data.title)\r\n        setDesc(data.description)\r\n        setColor(data.color)\r\n    }\r\n\r\n    const addTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        if (!title) {\r\n            alert('Empty title')\r\n            return\r\n        }\r\n        let pushData = {\r\n            title: title,\r\n            description: desc,\r\n            color: color\r\n        }\r\n        if (editData) {\r\n            dispatch(editTodo(pushData, editData._id));\r\n        } else {\r\n            dispatch(addTodo(pushData));\r\n        }\r\n        resetForm()\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setTitle('');\r\n        setDesc('');\r\n        setColor('#ff9146');\r\n        resetEditData('')\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"action_container\">\r\n            <button onClick={() => dispatch(clearTodos(todos))}\r\n                className=\"delete_all_button\" disabled={!!editData}>\r\n                Delete All\r\n            </button>\r\n            <form onSubmit={addTodoHandler} id=\"add_form\">\r\n                <div className=\"add_form_header\">{editData ? 'Edit Todo' : 'Add Todo'}</div>\r\n                <input type=\"text\" placeholder=\"Title*\" value={title}\r\n                    onChange={(e) => setTitle(e.target.value)} />\r\n                <textarea placeholder=\"Description\" value={desc} form=\"add_form\"\r\n                    onChange={(e) => setDesc(e.target.value)} />\r\n                <div className=\"add_form_color_cont\">\r\n                    Color: <ColorPicker color={color}\r\n                        onChange={(data) => setColor(data.color)} placement=\"topRight\" />\r\n                </div>\r\n                <div className=\"add_form_action_buttons\">\r\n                    <button type=\"submit\">{editData ? 'Edit' : 'Add'}</button>\r\n                    {editData && <button type=\"button\" onClick={resetForm}>Cancel</button>}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import './App.scss';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getTodos } from './actions/actions'\r\nimport { SingleTodo } from './components/SingleTodo';\r\nimport { Loader } from './components/Loader';\r\nimport { ActionContainer } from './components/ActionContainer';\r\n\r\nexport const App = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { todos, showLoader } = useSelector(state => state);\r\n    const [editData, setEditData] = useState('')\r\n\r\n    useEffect(() => {\r\n        dispatch(getTodos());\r\n    }, []);\r\n\r\n    const setEditDataHandler = (data) => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' })\r\n        setEditData(data);\r\n    }\r\n\r\n    return (\r\n        <div className='todo_container'>\r\n            {\r\n                showLoader\r\n                    ?\r\n                    <Loader />\r\n                    :\r\n                    <>\r\n                        <ActionContainer editData={editData} resetEditData={setEditData} />\r\n                        <div className=\"todo_list\" >\r\n                            {[...todos].reverse().map(el => <SingleTodo todo={el} key={el._id}\r\n                                setEditData={setEditDataHandler} />)}\r\n                        </div>\r\n                    </>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}","const initialState = {\r\n    todos: [],\r\n    showLoader: true\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'HIDE_LOADER':\r\n            return {\r\n                ...state,\r\n                showLoader: false\r\n            };\r\n        case 'GET_TODOS':\r\n            return {\r\n                ...state,\r\n                todos: action.todos,\r\n            };\r\n        case 'ADD_TODO':\r\n            return {\r\n                ...state,\r\n                todos: [...state.todos, action.todo]\r\n            };\r\n            case 'EDIT_TODO':\r\n                let editId = state.todos.findIndex(el => el._id === action.data._id);\r\n                let pushData = [...state.todos];\r\n                pushData[editId] = action.data\r\n                return {\r\n                    ...state,\r\n                    todos: pushData\r\n                };    \r\n        case 'DELETE_TODO':\r\n            let filtered = state.todos.filter(el => el._id !== action.id);\r\n            return {\r\n                ...state,\r\n                todos: filtered\r\n            };\r\n        case 'CLEAR_TODOS':\r\n            return {\r\n                ...state,\r\n                todos: []\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default Reducer\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {App} from './App';\r\nimport Reducer from './Store/Reducer'\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = createStore(Reducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}